)]}'
{"version":3,"sources":["msavin:mongol/lib/common.js","msavin:mongol/client/row_header/header.html","msavin:mongol/client/row_account/account.html","msavin:mongol/client/row_account/accountViewer.html","msavin:mongol/client/row_account/accountViewer.js","msavin:mongol/client/row_collection_notFound/notFound.html","msavin:mongol/client/row_collection/collections.html","msavin:mongol/client/row_collection/collections.js","msavin:mongol/client/doc_editor/docViewer.html","msavin:mongol/client/doc_editor/docViewer.js","msavin:mongol/client/doc_insert/docInsert.html","msavin:mongol/client/doc_insert/docInsert.js","msavin:mongol/client/_component/component.html","msavin:mongol/client/_component/component.js","msavin:mongol/client/row_subscriptions/subscriptions.html","msavin:mongol/client/row_subscriptions/subscriptions.js","msavin:mongol/client/main.html","msavin:mongol/client/main.js","msavin:mongol/client/doc_controls/docControls.html","msavin:mongol/client/doc_controls/docControls.js","msavin:mongol/client/extensions/extensions.html","msavin:mongol/client/extensions/extensions.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6D;;AAEA,2B;AACA,E;AACA,sD;AACA,c;;AAEA,C;;AAEA,U;AACA,wC;AACA,wC;AACA,+D;;AAEA,mB;AACA,I;AACA,4B;AACA,mB;AACA,wB;AACA,8G;AACA,c;AACA,uB;AACA,wE;AACA,c;AACA,oB;AACA,qE;AACA,c;AACA,oB;AACA,sE;AACA,c;AACA,oB;AACA,sG;AACA,c;AACA,c;AACA,+B;AACA,c;AACA,K;AACA,I;AACA,4B;AACA,2B;AACA,Y;AACA,uG;AACA,gD;AACA,kC;AACA,sC;AACA,oB;AACA,qC;AACA,a;AACA,W;AACA,uB;AACA,S;AACA,iD;AACA,O;AACA,qB;AACA,mC;AACA,O;AACA,uB;AACA,I;AACA,sC;AACA,uE;AACA,qD;AACA,yD;AACA,I;AACA,oC;AACA,qD;AACA,8D;AACA,kF;AACA,+B;AACA,S;;AAEA,sB;AACA,mC;AACA,Q;;AAEA,6C;;AAEA,K;AACA,I;AACA,+C;;AAEA,oD;AACA,gD;;AAEA,yD;AACA,2C;AACA,+C;AACA,I;AACA,I;AACA,+B;AACA,6C;AACA,gD;AACA,+C;AACA,oD;AACA,wC;AACA,2C;AACA,2C;AACA,I;AACA,iC;AACA,kD;AACA,gD;AACA,6C;AACA,8C;AACA,4C;AACA,6C;AACA,+C;AACA,I;AACA,+C;AACA,mE;AACA,oD;AACA,gD;;AAEA,qC;AACA,I;AACA,+C;AACA,I;AACA,2C;;AAEA,+E;AACA,+C;AACA,mE;AACA,yC;;AAEA,sH;AACA,wC;AACA,gE;;AAEA,kJ;AACA,0F;AACA,mI;;AAEA,Y;AACA,0E;AACA,oH;;AAEA,4D;;AAEA,iC;;AAEA,2D;;AAEA,K;AACA,I;AACA,8B;AACA,0D;AACA,I;AACA,sB;AACA,2B;AACA,Y;AACA,6B;AACA,K;AACA,G;AACA,C;;;;;;;;;;;;;;;;;;;;;;ACtJA,sC;AACA,gF;AACA,kB;AACA,yC;AACA,Y;AACA,wC;AACA,M;AACA,iB;AACA,kF;AACA,iF;AACA,qC;AACA,6D;AACA,kC;AACA,iC;AACA,iE;AACA,yC;AACA,6C;AACA,6B;AACA,yC;AACA,mC;AACA,4C;AACA,6B;AACA,4C;AACA,gD;AACA,4C;AACA,6B;AACA,sC;AACA,8E;AACA,6D;AACA,6B;AACA,yC;AACA,qC;AACA,qG;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA,uC;AACA,kF;AACA,kB;AACA,yC;AACA,Y;AACA,yC;AACA,M;AACA,iB;AACA,kF;AACA,kG;AACA,0D;AACA,qB;AACA,qC;AACA,0C;AACA,sB;AACA,qB;AACA,qC;AACA,4C;AACA,sB;AACA,oE;AACA,+C;AACA,qD;AACA,qC;AACA,qF;AACA,0D;AACA,qB;AACA,qG;AACA,qB;AACA,iH;AACA,+B;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA,6C;AACA,8F;AACA,kB;AACA,4F;AACA,yB;AACA,wF;AACA,M;AACA,gC;AACA,iC;AACA,4D;AACA,K;AACA,oE;AACA,6E;AACA,gB;AACA,I;;AAEA,yD;AACA,sH;AACA,kB;AACA,wN;AACA,I;;;;;;;;;;;;;;;;;;;ACrBA,uC;AACA,4B;AACA,I;AACA,oC;AACA,0D;AACA,yF;AACA,qB;;AAEA,I;AACA,4B;;AAEA,yD;;AAEA,mB;AACA,oB;AACA,K;;AAEA,I;AACA,0B;;AAEA,yD;;AAEA,mB;AACA,+B;AACA,K;;AAEA,I;AACA,yB;AACA,I;AACA,2B;;AAEA,I;AACA,G;;;;;;;;;;;;;;;;;;;;AC/BA,mD;AACA,0G;AACA,kB;AACA,yC;AACA,Y;AACA,4C;AACA,M;AACA,iB;AACA,kF;AACA,qC;AACA,qD;AACA,2D;AACA,qC;AACA,6D;AACA,kC;AACA,iC;AACA,mE;AACA,yC;AACA,4G;AACA,iD;AACA,+B;AACA,gG;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA,0C;AACA,wF;AACA,kB;AACA,yC;AACA,Y;AACA,4C;AACA,M;AACA,iB;AACA,kF;AACA,+E;AACA,iC;AACA,uC;AACA,8D;AACA,qB;AACA,qC;AACA,+B;AACA,4D;AACA,oE;AACA,mB;AACA,2D;AACA,kE;AACA,kF;AACA,kC;AACA,mB;AACA,qD;AACA,6C;AACA,oD;AACA,mF;AACA,qC;AACA,mG;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACjCA,mC;AACA,wB;;AAEA,wC;AACA,wD;;AAEA,8E;AACA,M;AACA,mB;AACA,I;AACA,Y;AACA,M;AACA,yD;AACA,yC;AACA,M;AACA,4C;AACA,0C;AACA,O;AACA,M;AACA,K;;AAEA,I;AACA,G;;AAEA,oC;AACA,gC;;AAEA,sC;AACA,0D;;AAEA,mE;;AAEA,iB;;AAEA,I;AACA,gC;;AAEA,wC;AACA,kD;;AAEA,iD;AACA,4B;;AAEA,iB;;AAEA,G;AACA,G;;;;;;;;;;;;;;;;;;;;AC7CA,yC;AACA,sF;AACA,kB;AACA,8B;AACA,mD;AACA,iB;AACA,0H;AACA,2D;AACA,mB;AACA,gD;AACA,wD;AACA,qB;AACA,yC;AACA,+B;AACA,8F;AACA,Y;AACA,0B;AACA,2E;AACA,Y;AACA,uC;AACA,kE;AACA,W;AACA,oF;AACA,oF;AACA,yC;AACA,qB;AACA,yC;AACA,+B;AACA,8F;AACA,Y;AACA,0B;AACA,2E;AACA,Y;AACA,uC;AACA,kE;AACA,W;AACA,sF;AACA,oF;AACA,yC;AACA,qB;AACA,mB;AACA,qC;AACA,yC;AACA,wB;AACA,wE;AACA,S;AACA,gF;AACA,iB;AACA,iB;AACA,4F;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACpDA,kC;;AAEA,mC;AACA,+B;AACA,sC;AACA,8D;AACA,0E;AACA,8C;AACA,mD;AACA,0C;AACA,sB;AACA,I;AACA,6B;AACA,0B;AACA,oE;;AAEA,uC;AACA,4F;AACA,Y;AACA,6B;AACA,K;;AAEA,oB;;AAEA,I;AACA,4B;;AAEA,yD;;AAEA,mB;AACA,oB;AACA,K;;AAEA,I;AACA,0B;;AAEA,yD;;AAEA,mB;AACA,+B;AACA,K;;AAEA,I;AACA,yB;AACA,+G;AACA,6B;AACA,kB;AACA,K;AACA,I;AACA,gC;AACA,gB;AACA,G;AACA,G;;;AAGA,oB;AACA,4B;AACA,6D;AACA,kD;AACA,6C;AACA,I;AACA,wB;AACA,I;AACA,gE;AACA,yD;AACA,I;AACA,yB;;AAEA,U;AACA,qG;AACA,8C;AACA,gC;AACA,oC;AACA,kB;AACA,mC;AACA,W;AACA,S;AACA,qB;AACA,O;AACA,+C;AACA,K;AACA,mB;AACA,qC;AACA,K;AACA,qB;;AAEA,I;AACA,2B;AACA,I;AACA,uJ;;AAEA,2E;AACA,4D;AACA,+C;AACA,iD;AACA,oC;AACA,uC;AACA,8B;AACA,gC;AACA,Y;AACA,kD;AACA,wD;AACA,gG;AACA,+D;AACA,+C;AACA,iD;AACA,0D;AACA,K;;AAEA,oB;AACA,2H;AACA,qB;AACA,sD;AACA,gB;AACA,gC;AACA,iC;AACA,S;AACA,S;AACA,K;AACA,G;AACA,C;;AAEA,+B;AACA,mD;AACA,qD;AACA,6B;AACA,qC;AACA,K;AACA,K;AACA,C;;AAEA,kC;AACA,6C;AACA,qC;AACA,sB;AACA,6D;AACA,gD;AACA,iD;;AAEA,I;AACA,8C;AACA,kC;AACA,G;AACA,G;;AAEA,wD;AACA,oC;;AAEA,gD;AACA,8E;AACA,iD;AACA,oB;AACA,wD;AACA,G;;AAEA,K;;;;;;;;;;;;;;;;;;;;AC1JA,yC;AACA,sF;AACA,kB;AACA,0M;AACA,sC;AACA,oB;AACA,8E;AACA,M;AACA,mB;AACA,2B;AACA,sD;AACA,I;;;;;;;;;;;;;;;;;;;ACZA,kC;AACA,mD;;AAEA,sC;AACA,gE;AACA,wE;AACA,+C;;AAEA,oB;AACA,wF;AACA,qB;AACA,kD;AACA,4C;AACA,mD;AACA,4E;AACA,gB;AACA,iC;AACA,S;AACA,S;AACA,K;;AAEA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACrBA,yC;AACA,sF;AACA,kB;AACA,mB;AACA,yB;AACA,0E;AACA,M;AACA,oB;AACA,qE;AACA,K;AACA,2D;AACA,yC;AACA,uD;AACA,O;AACA,a;AACA,I;;;;;;;;;;;;;;;;;;;AChBA,kC;AACA,mC;AACA,qE;AACA,yD;AACA,U;AACA,8D;AACA,G;;AAEA,+C;AACA,G;AACA,4C;AACA,sB;AACA,K;AACA,yC;AACA,oD;AACA,I;AACA,G;;AAEA,mC;AACA,uB;AACA,uE;AACA,iC;AACA,K;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACvBA,6C;AACA,8F;AACA,kB;AACA,yC;AACA,Y;AACA,+C;AACA,M;AACA,iB;AACA,kF;AACA,6C;AACA,oD;AACA,6D;AACA,8C;AACA,0D;AACA,qC;AACA,2B;AACA,kC;AACA,iC;AACA,2D;AACA,0D;AACA,gF;AACA,yC;AACA,yC;AACA,2D;AACA,qB;AACA,qC;AACA,wC;AACA,gC;AACA,+C;AACA,yB;AACA,0B;AACA,kB;AACA,kC;AACA,6C;AACA,iD;AACA,yD;AACA,wE;AACA,2D;AACA,kC;AACA,qB;AACA,uD;AACA,qE;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AC7CA,uC;AACA,6B;;AAEA,iE;AACA,2B;;AAEA,I;AACA,qB;AACA,wH;AACA,mB;AACA,I;AACA,uB;AACA,mH;;AAEA,4B;AACA,e;AACA,Y;AACA,oB;AACA,K;AACA,I;AACA,wB;AACA,I;AACA,0B;AACA,sC;AACA,Y;AACA,iC;AACA,K;AACA,I;AACA,G;AACA,G;;;AAGA,sC;AACA,oD;AACA,yD;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;;ACnCA,+B;AACA,kE;AACA,kB;AACA,mB;AACA,iB;AACA,yB;AACA,iG;AACA,M;AACA,kC;AACA,oC;AACA,yD;AACA,iB;AACA,4L;AACA,+D;AACA,mB;AACA,gG;AACA,mB;AACA,yG;AACA,wC;AACA,8D;AACA,mB;AACA,gG;AACA,oF;AACA,iB;AACA,+P;AACA,+D;AACA,mB;AACA,gG;AACA,mB;AACA,yG;AACA,wC;AACA,8D;AACA,mB;AACA,gG;AACA,mB;AACA,e;AACA,I;;;;;;;;;;;;;;;;;;;ACrCA,2B;AACA,I;AACA,uB;AACA,+B;;AAEA,6B;AACA,iE;;AAEA,gC;AACA,0B;AACA,4B;;AAEA,6C;AACA,iE;AACA,uE;;AAEA,G;;AAEA,yB;AACA,mC;AACA,yC;AACA,uD;AACA,2E;AACA,I;AACA,uB;AACA,0E;AACA,2B;AACA,6B;AACA,K;AACA,I;AACA,kC;AACA,2C;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AChCA,2C;AACA,0F;AACA,kB;AACA,8B;AACA,iD;AACA,iB;AACA,mC;AACA,2B;AACA,gG;AACA,O;AACA,qC;AACA,oD;AACA,mB;AACA,mC;AACA,iC;AACA,yC;AACA,sD;AACA,qB;AACA,uC;AACA,wD;AACA,qD;AACA,uD;AACA,0C;AACA,yD;AACA,kC;AACA,qB;AACA,6N;AACA,2E;AACA,6G;AACA,uD;AACA,8D;AACA,+B;AACA,mB;AACA,mC;AACA,iC;AACA,yC;AACA,sD;AACA,qB;AACA,uC;AACA,wD;AACA,qD;AACA,uD;AACA,0C;AACA,yD;AACA,kC;AACA,qB;AACA,uC;AACA,oD;AACA,4C;AACA,mD;AACA,+C;AACA,sD;AACA,4C;AACA,+B;AACA,2G;AACA,W;AACA,yB;AACA,2B;AACA,kB;AACA,mC;AACA,+B;AACA,0G;AACA,W;AACA,yB;AACA,2B;AACA,kB;AACA,yB;AACA,+B;AACA,4B;AACA,iB;AACA,iC;AACA,+B;AACA,0B;AACA,+B;AACA,+B;AACA,qB;AACA,c;AACA,qC;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;AC/EA,yB;;AAEA,uE;;AAEA,0C;AACA,wB;AACA,mC;AACA,4B;AACA,a;AACA,K;AACA,4B;AACA,K;AACA,sB;AACA,C;;AAEA,iC;;AAEA,6C;AACA,kC;AACA,gD;AACA,G;AACA,qD;AACA,6D;AACA,0D;AACA,S;AACA,C;;AAEA,oC;AACA,qC;;AAEA,uE;AACA,qE;AACA,8F;AACA,yE;AACA,4D;AACA,4C;AACA,iD;AACA,wE;;AAEA,2G;AACA,mB;;AAEA,gE;;AAEA,yC;AACA,wF;AACA,yB;AACA,qB;;AAEA,uD;AACA,oC;AACA,iC;AACA,a;AACA,Y;;AAEA,6D;AACA,S;;AAEA,c;AACA,kC;AACA,O;AACA,O;;;;AAIA,I;AACA,sC;AACA,gD;AACA,I;AACA,wC;;AAEA,wE;AACA,4C;AACA,sD;AACA,gG;AACA,yE;;AAEA,8D;AACA,uC;;;;AAIA,sF;;AAEA,mB;AACA,yB;AACA,8F;AACA,qC;;AAEA,8B;AACA,sD;AACA,6C;AACA,sD;AACA,S;;AAEA,oD;AACA,4C;AACA,S;;;AAGA,c;AACA,+B;AACA,O;;AAEA,O;;;;AAIA,I;AACA,0C;AACA,6C;AACA,gE;AACA,M;AACA,oE;AACA,uC;AACA,G;AACA,qB;;AAEA,gD;AACA,2D;AACA,wC;AACA,4D;AACA,6D;;AAEA,8C;AACA,yC;AACA,e;AACA,O;;AAEA,gD;AACA,iC;AACA,0C;AACA,c;AACA,8B;AACA,iE;AACA,wD;AACA,O;AACA,M;AACA,K;AACA,I;AACA,yC;;AAEA,6C;AACA,+D;;AAEA,oE;AACA,uC;AACA,M;AACA,qB;AACA,4C;AACA,+B;AACA,2D;AACA,yC;AACA,8D;AACA,6D;;AAEA,8C;AACA,uD;AACA,e;AACA,O;;AAEA,iD;AACA,Q;;AAEA,8B;AACA,uD;AACA,c;AACA,iE;AACA,wD;AACA,O;;AAEA,K;;AAEA,I;AACA,yC;;AAEA,oD;AACA,mF;AACA,0C;;AAEA,qH;;AAEA,2E;AACA,4D;AACA,4C;AACA,oC;AACA,uC;AACA,8B;AACA,gC;AACA,Y;AACA,kD;AACA,wD;AACA,kG;AACA,6D;AACA,4C;AACA,0D;AACA,K;;AAEA,oB;AACA,2H;AACA,qB;AACA,sD;;AAEA,gB;AACA,gC;AACA,S;AACA,S;AACA,K;AACA,I;AACA,2C;AACA,gD;AACA,I;AACA,yC;AACA,oB;AACA,I;AACA,G;;;AAGA,qC;AACA,uB;AACA,8C;AACA,yD;AACA,sC;AACA,0D;AACA,uD;AACA,I;AACA,+B;AACA,a;AACA,K;;AAEA,gC;AACA,mC;AACA,K;;AAEA,I;AACA,uB;AACA,wD;AACA,mB;AACA,I;AACA,6B;AACA,qD;AACA,e;AACA,sC;AACA,K;AACA,I;AACA,sC;AACA,yD;;AAEA,mB;AACA,sC;AACA,K;;AAEA,I;AACA,sB;;AAEA,iE;;AAEA,6C;AACA,mC;AACA,kB;AACA,K;;AAEA,yC;AACA,oC;AACA,kB;AACA,K;;AAEA,I;AACA,uB;;AAEA,2E;AACA,8C;AACA,iB;AACA,Y;AACA,kB;AACA,K;AACA,I;;AAEA,G;;AAEA,wD;AACA,oC;AACA,8C;AACA,0E;AACA,6C;AACA,gB;AACA,oD;AACA,C;AACA,K;;;;;;;;;;;;;;;;;;;;AChSA,0C;AACA,wF;AACA,kB;AACA,gC;AACA,oD;AACA,iB;AACA,yF;AACA,K;AACA,I;;AAEA,yC;AACA,sF;AACA,kB;AACA,yC;AACA,Y;AACA,uC;AACA,M;AACA,iB;AACA,kF;AACA,iC;AACA,iC;AACA,yC;AACA,gB;AACA,oE;AACA,U;AACA,qB;AACA,6C;AACA,oD;AACA,W;AACA,6B;AACA,oD;AACA,gD;AACA,uD;AACA,4B;AACA,qC;AACA,4B;AACA,iC;AACA,oD;AACA,gB;AACA,+D;AACA,U;AACA,qB;AACA,6C;AACA,oD;AACA,W;AACA,uC;AACA,yC;AACA,mD;AACA,gB;AACA,+D;AACA,U;AACA,qB;AACA,6C;AACA,oD;AACA,W;AACA,qC;AACA,O;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AC3DA,mC;AACA,kC;AACA,2C;AACA,G;AACA,6B;AACA,sC;AACA,G;AACA,6B;AACA,sC;AACA,E;AACA,E;;AAEA,oC;AACA,0B;AACA,wC;AACA,2B;AACA,G;AACA,E;AACA,E","file":"/packages/msavin_mongol.js","sourcesContent":["MeteorToysDict = Package[\"meteortoys:toykit\"].MeteorToysDict;\n\nif (Mongol === undefined) {\n  \n  // Create object and reserve name across the package\n  Mongol = {};\n\n}\n\nMongol = {\n  'getDocumentUpdate': function (data) {\n    var elementID = 'MongolDoc_' + data,\n      newData = document.getElementById(elementID).textContent;\n\n    return newData;\n  },\n  'error': function (data) {\n    switch (data) {\n      case \"json.parse\":\n        alert(\"There is an error with your JSON syntax.\\n\\nNote: keys and string values need double quotes.\");\n        break;\n      case \"duplicate\":\n        alert(\"Strange, there was an error duplicating your document.\");\n        break;\n      case \"remove\":\n        alert(\"Strange, there was an error removing your document.\");\n        break;\n      case \"insert\":\n        alert(\"Strange, there was an error inserting your document.\");\n        break;\n      case \"update\":\n        alert(\"There was an error updating your document. Please review your changes and try again.\");\n        break;\n      default:\n        return \"Unknown Error\";\n        break;\n    }\n  },\n  'parse': function (data) {\n      var newObject = null;\n      try { \n        var reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n        var dateParser = function (key, value) {\n          if (_.isString(value)) {\n            var a = reISO.exec(value);\n            if (a) {\n              return new Date(value);\n            }\n          }\n          return value;\n        }\n        newObject = JSON.parse(data, dateParser);\n      }\n      catch (error) {\n        Mongol.error(\"json.parse\");\n      }\n      return newObject;\n  },\n  'setSubscriptionKeys': function () {\n      // var subscriptions  = Meteor.default_connection._subscriptions,\n      // subKeys        = Object.keys(subscriptions);\n      // MeteorToysDict.set(\"MeteorToys_PubSub\", subKeys)\n  },\n  'detectCollections': function () {\n    if (MeteorToysDict.get('Mongol') === undefined) {\n        // Note: this returns the actual mongo collection name\n        var collections = _.map(Mongo.Collection.getAll(), function (collection) {\n        return collection.name;\n      });\n\n      var defaults = {\n        'collections': collections,\n      };\n\n      MeteorToysDict.set(\"Mongol\", defaults);\n\n    }\n  },\n  'hideCollection': function (collectionName) {\n\n    var MongolConfig = MeteorToysDict.get(\"Mongol\"),\n        collections  = MongolConfig.collections;\n\n    collections = _.without(collections, collectionName);\n    MongolConfig.collections = collections;\n    MeteorToysDict.set(\"Mongol\", MongolConfig);\n    \n  },\n  'hideVelocity': function () {\n    this.hideCollection('velocityTestFiles');\n    this.hideCollection('velocityFixtureFiles');\n    this.hideCollection('velocityTestReports');\n    this.hideCollection('velocityAggregateReports');\n    this.hideCollection('velocityLogs');\n    this.hideCollection('velocityMirrors');\n    this.hideCollection('velocityOptions');\n  },\n  'hideMeteorToys': function () {\n    this.hideCollection(\"MeteorToys_Impersonate\");\n    this.hideCollection(\"MeteorToys_JetSetter\");\n    this.hideCollection(\"MeteorToys_Mongol\");\n    this.hideCollection(\"MeteorToys_AutoPub\");\n    this.hideCollection(\"MeteorToys_Email\");\n    this.hideCollection(\"MeteorToys_Result\");\n    this.hideCollection(\"MeteorToys_Throttle\");\n  },\n  'showCollection': function (collectionName) {\n    // In case a collection does not get detected, like a local one\n    var MongolConfig = MeteorToysDict.get(\"Mongol\"),\n        collections  = MongolConfig.collections;\n\n    collections.push(collectionName);\n    \n    MeteorToysDict.set(\"Mongol\", MongolConfig);\n  },\n  'Collection': function (collectionName) {\n\n    // Go through a variety of means of trying to return the correct collection\n    return Mongo.Collection.get(collectionName)\n      // This should automatically match all collections by default\n      // including namespaced collections\n\n    || ((Meteor.isServer) ? eval(collectionName) : Meteor._get.apply(null,[window].concat(collectionName.split('.'))))\n    // For user defined collection names\n    // in the form of Meteor's Mongo.Collection names as strings\n\n    || ((Meteor.isServer) ? eval(firstToUpper(collectionName)) : Meteor._get.apply(null,[window].concat(firstToUpper(collectionName).split('.'))))\n    // For user defined collections where the user has typical upper-case collection names\n    // but they've put actual mongodb collection names into the Mongol config instead of Meteor's Mongo.Collection names as strings\n\n    || null;\n    // If the user has gone for unconventional casing of collection names,\n    // they'll have to get them right (i.e. Meteor's Mongo.Collection names as string) in the Mongol config manually\n\n    // Changes the first character of a string to upper case\n\n    function firstToUpper(text) {\n\n      return text.charAt(0).toUpperCase() + text.substr(1);\n\n    }\n  },\n  'register': function(spec) {\n    originalSet = MeteorToysDict.get(\"Mongol_Extensions\");\n    \n    if (originalSet) {\n      originalSet = [spec];\n    } else {\n      originalSet.push(spec);\n    }\n  }\n}\n\n\n","\nTemplate.__checkName(\"Mongol_header\");\nTemplate[\"Mongol_header\"] = new Template(\"Template.Mongol_header\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"mongol_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n    \", HTML.STRONG(\"Mongol\"), HTML.BR(), \"\\n    \", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n    \", HTML.Comment(\"  \"), \"\\n      \", HTML.DIV({\n        \"class\": \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n        Meteor Toys\\n      \"), \"\\n      \", HTML.DIV({\n        \"class\": \"Mongol_documentViewer \"\n      }, \"\\n\", HTML.PRE(\"{ \\n  \", HTML.SPAN({\n        \"class\": \"Mongol_key\"\n      }, '\"created_by\"'), ': \"', HTML.A({\n        href: \"http://maxsavin.com\"\n      }, \"Max Savin\"), '\",\\n  ', HTML.SPAN({\n        \"class\": \"Mongol_key\"\n      }, '\"code_and_docs\"'), ': \"', HTML.A({\n        href: \"https://github.com/msavin/Mongol\"\n      }, \"on GitHub\"), '\",\\n  ', HTML.SPAN({\n        \"class\": \"Mongol_key\"\n      }, '\"license\"'), ': \"', HTML.A({\n        href: \"https://github.com/MeteorToys/allthings/blob/master/LICENSE.md\"\n      }, \"Meteor Toys License\"), '\",\\n} , {\\n  ', HTML.SPAN({\n        \"class\": \"Mongol_key\"\n      }, '\"more_toys!\"'), ': \"', HTML.A({\n        href: \"http://bit.ly/1Lv1Ou4\"\n      }, \"Meteor Toys\"), '\"\\n}\\n'), \"\\n      \"), \"\\n    \", HTML.Comment(\"  \"), \"\\n    \"), \"\\n\\n  \" ];\n    });\n  });\n}));\n","\nTemplate.__checkName(\"Mongol_account\");\nTemplate[\"Mongol_account\"] = new Template(\"Template.Mongol_account\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"account_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\t\t\t\", HTML.Comment(\" Display sign in status \"), \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"currentUser\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.DIV({\n          \"class\": \"Mongol_account_active\"\n        }), \"\\n\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.DIV({\n          \"class\": \"Mongol_account_inactive\"\n        }), \"\\n\t\t\t\" ];\n      }), \"\\n\\n\t\t\t\", HTML.Comment(\" Row Name \"), \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_icon Mongol_icon_user\"\n      }), \"\\n\t\t\tAccount\\n     \\n        \", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n\\n\t\t\t\", HTML.Comment(\" Document Viewer \"), \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"currentUser\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_accountViewer\")), \"\\n\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_accountViewer_notSignedIn\")), \"\\n\t\t\t\" ];\n      }), \"\\n\\n\t\t\"), \"\\n\\n\t\" ];\n    });\n  });\n}));\n","\nTemplate.__checkName(\"Mongol_accountViewer\");\nTemplate[\"Mongol_accountViewer\"] = new Template(\"Template.Mongol_accountViewer\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"Mongol_docControls\")), \"\\n\\n\t\", HTML.DIV({\n    \"class\": function() {\n      return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n    },\n    id: \"MongolDoc_account_618\",\n    contenteditable: function() {\n      return Spacebars.mustache(view.lookup(\"editContent\"));\n    }\n  }, \"\t\\n\t\t\", HTML.PRE(Blaze.View(\"lookup:accountData\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"accountData\")));\n  })), \"\\n\t\") ];\n}));\n\nTemplate.__checkName(\"Mongol_accountViewer_notSignedIn\");\nTemplate[\"Mongol_accountViewer_notSignedIn\"] = new Template(\"Template.Mongol_accountViewer_notSignedIn\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"Mongol_docMenu\">\\n\t\t\t<div class=\"Mongol_docBar1\" style=\"text-indent: 8px\">\\n\t\t\t\tNot Signed In\\n\t\t\t</div>\\n\t\t</div>\\n\t<div class=\"Mongol_documentViewer\">\t\\n\t\t<!-- Nothing -->\\n\t</div>');\n}));\n","Template.Mongol_accountViewer.helpers({\n  accountData: function () {\n    \n    var docCurrent  = Meteor.user(),\n        json_output = JSON.stringify(docCurrent, null, 2),\n        colorized   = Package[\"meteortoys:toykit\"].MeteorToys_JSON.colorize(json_output);\n    return colorized;\n\n  },\n  editContent: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"true\";\n    }\n\n  },\n  editStyle: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_editable\";\n    }\n\n  },\n  usercode: function () {\n    \n    return Meteor.userId();\n\n  },\n});\n","\nTemplate.__checkName(\"Mongol_collection_notFound\");\nTemplate[\"Mongol_collection_notFound\"] = new Template(\"Template.Mongol_collection_notFound\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"no_collections\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n    \", HTML.DIV({\n        \"class\": \"Mongol_icon Mongol_icon_collection\"\n      }), \"No Collections\", HTML.BR(), \"\\n    \", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n    \", HTML.Comment(\"  \"), \"\\n      \", HTML.DIV({\n        \"class\": \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n        None Detected\\n      \"), \"\\n      \", HTML.DIV({\n        \"class\": \"Mongol_documentViewer \"\n      }, \"\\n\\n        If you think this is an error,\", HTML.BR(), \"\\n        please report it on \", HTML.A({\n        href: \"https://github.com/msavin/Mongol\",\n        style: \"color: #cc0000\"\n      }, \"GitHub\"), \".\\n        \\n      \"), \"\\n    \", HTML.Comment(\"  \"), \"\\n    \"), \"\\n\\n  \" ];\n    });\n  });\n}));\n","\nTemplate.__checkName(\"Mongol_collection\");\nTemplate[\"Mongol_collection\"] = new Template(\"Template.Mongol_collection\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(view.lookup(\".\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\t\t\", HTML.Comment(\" Collection Count \"), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_counter\"\n      }, \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"collectionCount\"));\n      }, function() {\n        return [ \"\\n\t\t\t\", HTML.SPAN({\n          \"class\": \"MongolHide\"\n        }, Blaze.View(\"lookup:currentPosition\", function() {\n          return Spacebars.mustache(view.lookup(\"currentPosition\"));\n        }), \"/\") ];\n      }), Blaze.View(\"lookup:collectionCount\", function() {\n        return Spacebars.mustache(view.lookup(\"collectionCount\"));\n      }), \"\\n\t\t\"), \"\\n\\n\t\t\", HTML.Comment(\" Collection Name \"), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_row_name\"\n      }, HTML.DIV({\n        \"class\": \"Mongol_icon Mongol_icon_collection\"\n      }), Blaze.View(\"lookup:.\", function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      })), \"\\n    \t    \\n\t\t\", HTML.Comment(\" Document Viewer \"), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_docViewer\")), \"\\n\t\t\"), \"\\n\t\t\\n\t\" ];\n    });\n  });\n}));\n","Template.Mongol_collection.events({\n  'click': function () {\n\n    var targetCollection = String(this),\n        sessionKey       = \"Mongol_\" + targetCollection;\n\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", targetCollection)) {\n      \n      // do nothing\n    \n    } else {\n      \n      // If the collection doesn't have an index key set,\n      // start it from the first document\n      \n      if (!MeteorToysDict.get(sessionKey)) {\n        MeteorToysDict.set(sessionKey, 0);\n      }\n      \n    }\n\n  },\n});\n\nTemplate.Mongol_collection.helpers({\n  collectionCount: function () {\n\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n\n    var count = collectionVar && collectionVar.find().count() || 0;\n\n    return count;\n\n  },\n  currentPosition: function () {\n\n    var targetCollection = String(this);\n    var sessionKey = \"Mongol_\" + targetCollection;\n\n    var current = MeteorToysDict.get(sessionKey);\n    var count = current + 1;\n\n    return count;\n\n  }\n});\n","\nTemplate.__checkName(\"Mongol_docViewer\");\nTemplate[\"Mongol_docViewer\"] = new Template(\"Template.Mongol_docViewer\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notEmpty\"));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"Mongol_docControls\")), \"\\n    \", Spacebars.With(function() {\n      return Spacebars.call(view.lookup(\"activeDocument\"));\n    }, function() {\n      return [ \"\\n      \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editStyle\"));\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          \"class\": function() {\n            return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n          },\n          id: function() {\n            return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\"..\")) ];\n          },\n          contenteditable: function() {\n            return Spacebars.mustache(view.lookup(\"editContent\"));\n          }\n        }, \"  \\n          \", HTML.PRE(Blaze.View(\"lookup:documentJSON\", function() {\n          return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"documentJSON\")));\n        })), \"\\n        \"), \"\\n      \" ];\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          \"class\": function() {\n            return [ \"Mongol_documentViewer \", Spacebars.mustache(view.lookup(\"editStyle\")) ];\n          },\n          id: function() {\n            return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\"..\")) ];\n          },\n          contenteditable: function() {\n            return Spacebars.mustache(view.lookup(\"editContent\"));\n          }\n        }, \"  \\n            \", HTML.PRE(Blaze.View(\"lookup:documentJSON\", function() {\n          return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"documentJSON\")));\n        })), \"\\n        \"), \"\\n      \" ];\n      }), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"Mongol_documentViewer\",\n        id: function() {\n          return [ \"MongolDoc_\", Spacebars.mustache(view.lookup(\".\")) ];\n        }\n      }, \"  \\n        \", HTML.PRE(\"No document found\"), \"\\n      \"), \"\\n    \" ];\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"Mongol_docInsert\")), \"\\n  \" ];\n  });\n}));\n","MeteorToysDict.set(\"random\", true)\n\nTemplate.Mongol_docViewer.helpers({\n  activeDocument: function () {\n    var collectionName = String(this);\n    var currentCollection = Mongol.Collection(collectionName);\n    var documents = currentCollection.find({}, {transform: null}).fetch();\n    var sessionKey = \"Mongol_\" + String(this);\n    var docNumber = MeteorToysDict.get(sessionKey);\n    var docCurrent = documents[docNumber];\n    return docCurrent;\n  },\n  documentJSON: function () {\n    var docCurrent = this;\n    var json_output = JSON.stringify(docCurrent, null, 2), colorize;\n\n    if (!(json_output === undefined)) {\n      colorize = Package[\"meteortoys:toykit\"].MeteorToys_JSON.colorizeEditable(json_output);\n    } else {\n      colorize = json_output;\n    }\n\n    return colorize;\n\n  },\n  editContent: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"true\";\n    }\n\n  },\n  editStyle: function () {\n\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_editable\";\n    }\n\n  },\n  notEmpty: function () {\n    var documentCount = Mongol.Collection(String(this)) && Mongol.Collection(String(this)).find().count() || 0;\n    if (documentCount >= 1) {\n      return true;\n    }\n  },\n  noInlineEditing: function () {\n    return true;\n  }\n});\n\n\nUpdaterFunctions = {\n  refreshView: function () {\n    current = MeteorToysDict.get(\"Mongol_currentCollection\");\n    content = MeteorToysDict.get(\"Mongol_backup\");\n    $(\"#MongolDoc_\" + current).html(content);\n  },\n  getData: function () {\n    \n    var target = MeteorToysDict.get(\"Mongol_currentCollection\"),\n        data   = $(\"#Mongol_c\" + target + \" pre\").text();\n    \n    var newObject = null;\n\n    try { \n      var reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n      var dateParser = function (key, value) {\n        if (_.isString(value)) {\n          var a = reISO.exec(value);\n          if (a) {\n            return new Date(value);\n          }\n        }\n        return value;\n      }\n      newObject = JSON.parse(data, dateParser);\n    }\n    catch (error) {\n      UpdaterFunctions.refreshView();\n    }\n    return newObject;\n\n  },\n  updateData: function () {\n    \n    var collectionName = (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) ? \"users\" : MeteorToysDict.get(\"Mongol_currentCollection\");\n\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) {\n      var newData = Mongol.getDocumentUpdate(\"account_618\");\n      // var newObject = Mongol.parse(newData);\n      var newObject = UpdaterFunctions.getData();\n      var oldObject = Meteor.user();\n      // console.log(targetCollection);\n      // console.log(newData);\n      // console.log(newObject);\n    } else {\n      var sessionKey = \"Mongol_\" + collectionName;\n      DocumentPosition = MeteorToysDict.get(sessionKey),\n      CurrentCollection = Mongol.Collection(collectionName).find({}, {transform: null}).fetch();\n      var newData   = Mongol.getDocumentUpdate(collectionName);\n      // var newObject = Mongol.parse(newData);\n      var newObject = UpdaterFunctions.getData();\n      var oldObject = CurrentCollection[DocumentPosition];\n    }\n\n    if (newObject) {\n      Meteor.call(\"Mongol_update\", collectionName, newObject, Mongol.validateDocument(oldObject), function(error, result) {\n        if (!error) {\n          MeteorToysDict.set('Mongol_editMode', null);\n        } else {\n          Mongol.error('update')\n          // console.log(\"error\")\n        }\n      });\n    }\n  }\n}\n\npreventEnterKey = function () {\n  $('.MeteorToys_inline').keydown(function(event) {\n    if (event.keyCode == 10 || event.keyCode == 13) {\n      event.preventDefault();\n      $('.MeteorToys_inline').blur();\n    }\n  });\n}\n\nTemplate.Mongol_docViewer.events({\n  'focusin .MeteorToys_inline': function () {\n    // UpdaterFunctions.updateData();\n    preventEnterKey();\n    current = MeteorToysDict.get(\"Mongol_currentCollection\");\n    content = $(\"#MongolDoc_\" + current).html();\n    MeteorToysDict.set(\"Mongol_backup\", content);\n\n  },\n  'focusout .MeteorToys_inline': function () {\n    UpdaterFunctions.updateData();\n  }\n});\n\n// Will possibly be used in augmented document update UI\n/*Template.Mongol_docViewer.events({\n\n  'click .Mongol_string' : function (evt,tmpl) {\n    var field = $(evt.target).prevAll(\".Mongol_key:first\").text().slice(1,-2);\n    MeteorToysDict.set('Mongol_inlineEdit',true);\n    Tracker.flush();\n    // Do something to trigger the editable text element\n  }\n\n});*/\n","\nTemplate.__checkName(\"Mongol_docInsert\");\nTemplate[\"Mongol_docInsert\"] = new Template(\"Template.Mongol_docInsert\", (function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"Mongol_docMenu\">\\n\t\t<div class=\"MeteorToys_action Mongol_docMenu_insert\" style=\"float: right\">Insert</div>\\n\t\t&nbsp;Create the First Document\\n\t</div>\\n\\n\t'), HTML.DIV({\n    \"class\": \"Mongol_documentViewer \",\n    id: function() {\n      return [ \"Mongol_\", Spacebars.mustache(view.lookup(\".\")), \"_newEntry\" ];\n    },\n    tabindex: \"-1\",\n    contenteditable: \"true\"\n  }, \"\t\\n\", HTML.Raw(\"<pre>{\\n\\n}</pre>\"), \"\\n\\n\t\") ];\n}));\n","Template.Mongol_docInsert.events({\n  'click .Mongol_docMenu_insert': function (e, t) {\n\n    var CollectionName = String(this),\n        newDataID      = \"Mongol_\" + String(this) + \"_newEntry\",\n        newData        = document.getElementById(newDataID).textContent,\n        newObject      = Mongol.parse(newData);\n\n    if (newObject) {\n      Meteor.call('Mongol_insert', CollectionName, newObject, function (error, result) {\n        if (!error) {\n          sessionKey = \"Mongol_\" + CollectionName;\n          MeteorToysDict.set(sessionKey, 0);\n          alert(\"Document successfully inserted.\");\n          t.$(\"#Mongol_\" + CollectionName + \"_newEntry\").html(\"{<br><br>}\");\n        } else {\n          Mongol.error(\"insert\");\n        }\n      });\n    }\n\n  }\n});\n","\nTemplate.__checkName(\"Mongol_Component\");\nTemplate[\"Mongol_Component\"] = new Template(\"Template.Mongol_Component\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"Mongol_row \", Spacebars.mustache(view.lookup(\"active\")) ];\n    },\n    id: function() {\n      return [ \"Mongol_c\", Spacebars.mustache(view.lookup(\"name\")) ];\n    }\n  }, \"\\n\t\t\", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n\t\");\n}));\n","Template.Mongol_Component.events({\n\t'click .Mongol_row': function () {\n\t\tif (MeteorToysDict.equals(\"Mongol_currentCollection\", this.name)) {\n\t\t  MeteorToysDict.set(\"Mongol_currentCollection\", null);\n\t\t} else {\n\t\t  MeteorToysDict.set(\"Mongol_currentCollection\", this.name);\n\t\t}\n\n\t\tMeteorToysDict.set(\"Mongol_editMode\", false);\n\t},\n\t'click .Mongol_contentView': function (e) {\n\t\te.stopPropagation();\n  \t},\n  \t'mouseover .Mongol_row': function () {\n  \t\tMeteorToysDict.set(\"Mongol_preview\", this.name);\n  \t}\n});\n\nTemplate.Mongol_Component.helpers({\n  active: function () {\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", this.name)) {\n      return \"Mongol_row_expand\";\n    }\n  }\n});\n","\nTemplate.__checkName(\"Mongol_subscriptions\");\nTemplate[\"Mongol_subscriptions\"] = new Template(\"Template.Mongol_subscriptions\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"subscriptions_618\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\\n\t\t\\n        \", HTML.DIV({\n        \"class\": \"Mongol_toggle_selected_collection\"\n      }, \"\\n\t\t\t\", HTML.Comment(\" Name \"), \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_icon Mongol_icon_sub\"\n      }), \"Subscriptions\\n        \"), \"\\n\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_docMenu\",\n        style: \"text-indent: 8px\"\n      }, \"\\n\t\t\t\", Blaze.View(\"lookup:subType\", function() {\n        return Spacebars.mustache(view.lookup(\"subType\"));\n      }), \"\\n\t\t\"), \"\\n\t\t\", HTML.Comment(\" Document Viewer \"), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_documentViewer \"\n      }, \"\\n\t\t\t\", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"subscription\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.DIV({\n          \"class\": \"Mongol_subscription\"\n        }, \"\\n\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"Mongol_subscription_toggle\"\n        }, HTML.CharRef({\n          html: \"&times;\",\n          str: \"×\"\n        })), \"\\n\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"Mongol_subscription_name\"\n        }, Blaze.View(\"lookup:name\", function() {\n          return Spacebars.mustache(view.lookup(\"name\"));\n        })), \"\\n\t\t\t\t\tParams: \", Blaze.View(\"lookup:params\", function() {\n          return Spacebars.mustache(view.lookup(\"params\"));\n        }), \" \\n\t\t\t\t\"), \"\\n\t\t\t\" ];\n      }, function() {\n        return \"\\n\t\t\t\tNo subscriptions available\\n\t\t\t\";\n      }), \"\\n\t\t\"), \"\\n\t\t\", HTML.Comment(\"  \"), \"\\n\t\"), \"\\n\t\t\\n\\n\t\" ];\n    });\n  });\n}));\n","Template.Mongol_subscriptions.helpers({\n  subscription: function () {\n\n    var subscriptionIDs = MeteorToysDict.get(\"MeteorToys_PubSub\")\n    return subscriptionIDs;\n\n  },\n  name: function () {\n    var subName = Meteor.default_connection._subscriptions[this] && Meteor.default_connection._subscriptions[this].name;\n    return subName;\n  },\n  params: function () {\n    var p = Meteor.default_connection._subscriptions[this] && Meteor.default_connection._subscriptions[this].params\n\n    if (p && p.length > 0) {\n      return p;\n    } else {\n      return \"none\";\n    }\n  },\n  subType: function () {\n    \n    if (!Object.observe) {\n      return \"Polling every 3 seconds\"\n    } else {\n      return \"Observing Changes\";\n    }\n    \n  }\n});\n\n\nTemplate.Mongol_subscriptions.events({\n  'click .Mongol_subscription_toggle': function () {\n    Meteor.default_connection._subscriptions[this].stop()\n  }\n});\n\n","\nTemplate.__checkName(\"Mongol\");\nTemplate[\"Mongol\"] = new Template(\"Template.Mongol\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"Mongol\",\n    \"class\": function() {\n      return [ Spacebars.mustache(view.lookup(\"active\")), \" MeteorToys MeteorToys_hide_Mongol\" ];\n    },\n    oncontextmenu: \"return false;\"\n  }, \"\\n\\n\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"MeteorToys_Pro\"));\n  }, function() {\n    return [ \"\\n\t\t\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_header_pro\")), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_account\")), \"\\n\\n\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"Mongol_collections\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection\")), \"\\n\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection_notFound\")), \"\\n\t\t\t\" ];\n    }), \"\\n\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"Mongol_isExtended\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_extensions\")), \"\\n\t\t\t\" ];\n    }), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_trash\")), \"\\n\\n\t\t\" ];\n  }, function() {\n    return [ \"\\n\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_header\")), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_account\")), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_subscriptions\")), \"\\n\\n\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"Mongol_collections\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection\")), \"\\n\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_collection_notFound\")), \"\\n\t\t\t\" ];\n    }), \"\\n\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"Mongol_isExtended\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_extensions\")), \"\\n\t\t\t\" ];\n    }), \"\\n\\n\t\t\" ];\n  }), \"\\n\\n\t\");\n}));\n","Meteor.startup(function() {\n    \n  // Detect collections\n    Mongol.detectCollections();\n\n  // Initialize Reactive-Dict\n    MeteorToysDict = Package[\"meteortoys:toykit\"].MeteorToysDict;\n\n  // Hide background collections\n    Mongol.hideVelocity();\n    Mongol.hideMeteorToys();\n\n  // For use outside of Mongol package scope:\n  // Package[\"msavin:mongol\"].Mongol.hideCollection(\"mongoName\");\n  // Package[\"msavin:mongol\"].Mongol.showCollection(\"localCollection\");\n\n});\n\nTemplate.Mongol.helpers({\n  Mongol_collections: function () {\n    // returns Mongo names of collections\n    var    MongolConfig = MeteorToysDict.get(\"Mongol\");\n    return MongolConfig && _.without(MongolConfig.collections, null) || [];\n  },\n  active: function () {\n    var MongolCollection = MeteorToysDict.get(\"Mongol_currentCollection\");\n    if (MongolCollection) {\n      return \"Mongol_expand\";\n    }\n  },\n  Mongol_isExtended: function () {\n    return Package[\"meteortoys:mongolkit\"];\n  }\n});","\nTemplate.__checkName(\"Mongol_docControls\");\nTemplate[\"Mongol_docControls\"] = new Template(\"Template.Mongol_docControls\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"active\"));\n  }, function() {\n    return [ \"\\n\t\t\\n\t\t\", HTML.DIV({\n      \"class\": function() {\n        return [ \"Mongol_docMenu \", Spacebars.mustache(view.lookup(\"Mongol_docMenu_editing\")) ];\n      }\n    }, \"\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"account\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_docBar1\"\n      }, \"\\n\t\t\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editing\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_title\"\n        }, \"Update Document\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_save\"\n        }, \"Save\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_cancel\"\n        }, \"Cancel\"), \"\\n\t\t\t\t\t\" ];\n      }, function() {\n        return [ \"\t\\n\t\t\t\t\t\t\\n                        \", HTML.Comment(\"For some reason, the method in place does not work for this\\n                        Commenting out for now\"), \"\\n                        \", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_m_edit Mongol_m_updateAccount\"\n        }, \"Update\"), \"\\n\t\t\t\t\t\t\\n\t\t\t\t\t\t\", HTML.Comment(\" &nbsp;Currently Read-Only \"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_m_signout\"\n        }, \"Sign Out\"), \"\\n                        \\n\t\t\t\t\t\" ];\n      }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_docBar1\"\n      }, \"\\n\t\t\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"editing\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_title\"\n        }, \"Update Document\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_save\"\n        }, \"Save\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_edit_cancel\"\n        }, \"Cancel\"), \"\\n\t\t\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_m_edit\"\n        }, \"Update\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_m_new\"\n        }, \"Duplicate\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": \"MeteorToys_action Mongol_m_delete\"\n        }, \"Remove\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": function() {\n            return [ \"MeteorToys_action \", Spacebars.mustache(view.lookup(\"disable\")), \" Mongol_m_right\" ];\n          }\n        }, HTML.CharRef({\n          html: \"&rsaquo;\",\n          str: \"›\"\n        })), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n          \"class\": function() {\n            return [ \"MeteorToys_action \", Spacebars.mustache(view.lookup(\"disable\")), \" Mongol_m_left\" ];\n          }\n        }, HTML.CharRef({\n          html: \"&lsaquo;\",\n          str: \"‹\"\n        })), \"\\n\t\t\t\t\t\" ];\n      }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\" ];\n    }), \"\t\\n\t\t\"), \"\\n\\n\t\" ];\n  }, function() {\n    return [ \"\\n\\n\t\t\", HTML.DIV({\n      \"class\": \"Mongol_docMenu\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"Mongol_docBar1\"\n    }, \"\\n\t\t\t\t\", HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\\n\t\" ];\n  });\n}));\n","\n// needs to be re-thought\n\n// Strip out functions in case documents have had methods added to them\n\nMongol.validateDocument = function (doc) {\n  var validatedDoc = {};\n  _.each(doc, function (val, key) {\n    if (_.isFunction(val)) {\n      return;\n    }\n    validatedDoc[key] = val;\n  });\n  return validatedDoc;\n}\n\nMongol.inlineEditingTimer = null;\n\nMongol.resetInlineEditingTimer = function() {\n  if (Mongol.inlineEditingTimer) {\n\tMeteor.clearTimeout(Mongol.inlineEditingTimer);\n  }\n  MeteorToysDict.set('Mongol_noInlineEditing', true);\n  Mongol.inlineEditingTimer = Meteor.setTimeout(function () {\n    MeteorToysDict.set('Mongol_noInlineEditing', false);  \n  },300);\n}\n\nTemplate.Mongol_docControls.events({\n  'click .Mongol_m_new': function() {\n\n    CollectionName    = MeteorToysDict.get(\"Mongol_currentCollection\"),\n    DocumentPosition  = MeteorToysDict.get(\"Mongol_\" + String(this)),\n    CurrentCollection = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n    CollectionCount   = Mongol.Collection(CollectionName).find().count(),\n    CurrentDocument   = CurrentCollection[DocumentPosition],\n    DocumentID        = CurrentDocument._id,\n    sessionKey        = \"Mongol_\" + String(this),\n    ValidatedCurrentDocument = Mongol.validateDocument(CurrentDocument);\n\n    Meteor.call(\"Mongol_duplicate\", CollectionName, ValidatedCurrentDocument._id, function(error, result) {\n      if (!error) {\n\n        if (Mongol.Collection(CollectionName).findOne(result)) {\n\n          // Get position of new document\n          list  = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n          docID = result,\n          currentDoc;\n\n          docIndex = _.map(list, function(obj, index) {\n            if (obj._id === docID) {\n              currentDoc = index;\n            }\n          })\n\n          MeteorToysDict.set(sessionKey, Number(currentDoc));\n        }\n\n      } else {\n        Mongol.error(\"duplicate\");\n      }\n    });\n\n\n\n  },\n  'click .Mongol_m_edit': function() {\n    MeteorToysDict.set(\"Mongol_editMode\", true);\n  },\n  'click .Mongol_m_delete': function() {\n\n    var CollectionName = MeteorToysDict.get(\"Mongol_currentCollection\"),\n      sessionKey = \"Mongol_\" + String(this);\n    DocumentPosition = MeteorToysDict.get(sessionKey),\n      CurrentCollection = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n      CollectionCount = Mongol.Collection(CollectionName).find().count();\n\n    var CurrentDocument = CurrentCollection[DocumentPosition],\n      DocumentID = CurrentDocument._id;\n\n\n\n    Meteor.call('Mongol_remove', CollectionName, DocumentID, function(error, result) {\n\n      if (!error) {\n        // Log the action\n        console.log(\"Removed \" + DocumentID + \" from \" + CollectionName + \". Back-up below:\");\n        console.log(CurrentDocument);\n\n        // Adjust the position\n        if (DocumentPosition >= CollectionCount - 1) {\n          newPosition = DocumentPosition - 1;\n          MeteorToysDict.set(sessionKey, newPosition);\n        }\n\n        if (MeteorToysDict.get(sessionKey) === -1) {\n          MeteorToysDict.set(sessionKey, 0);\n        }\n\n\n      } else {\n        Mongol.error(\"remove\");\n      }\n\n    });\n\n\n\n  },\n  'click .Mongol_m_right': function(e,t) {\n    // Verify that the button is not disabled\n    if (!t.$('.Mongol_m_right').hasClass('Mongol_m_disabled')) {\n      \n      // Disable inline editing for 0.3s for quick flick to next doc\n      Mongol.resetInlineEditingTimer();\n\t  \n      // Grab the key\n\n      var sessionKey = \"Mongol_\" + String(this);\n      var CurrentDocument = MeteorToysDict.get(sessionKey);\n      var collectionName = String(this);\n      var collectionVar = Mongol.Collection(collectionName);\n      var collectionCount = collectionVar.find().count() - 1;\n\n      if (CurrentDocument > collectionCount) {\n        MeteorToysDict.set(sessionKey, 0)\n        return;\n      }\n\n      if (collectionCount === CurrentDocument) {\n        // Go back to document 1 \n        MeteorToysDict.set(sessionKey, 0);\n      } else {\n        // Go to next document\n        var MongolDocNumber = MeteorToysDict.get(sessionKey) + 1;\n        MeteorToysDict.set(sessionKey, MongolDocNumber);\n      }\n      \n    }\n  },\n  'click .Mongol_m_left': function(e,t) {\n\n    // Verify that the button is not disabled\n    if (!t.$('.Mongol_m_left').hasClass('Mongol_m_disabled')) {\n\n      // Disable inline editing for 0.3s for quick flick to next doc\n      Mongol.resetInlineEditingTimer();\n      \n      // Grab the key\n      sessionKey = \"Mongol_\" + String(this);\n      // Get the document count\n      var CurrentDocument = MeteorToysDict.get(sessionKey);\n      var collectionName  = String(this);\n      var collectionVar   = Mongol.Collection(collectionName);\n      var collectionCount = collectionVar.find().count() - 1;\n\n      if (CurrentDocument > collectionCount) {\n        MeteorToysDict.set(sessionKey, collectionCount)\n        return;\n      }\n\n      if (MeteorToysDict.get(sessionKey) === 0) {\n        \n\n        // Set the key to last\n        MeteorToysDict.set(sessionKey, collectionCount)\n      } else {\n        var MongolDocNumber = MeteorToysDict.get(sessionKey) - 1;\n        MeteorToysDict.set(sessionKey, MongolDocNumber);\n      }\n\n    }\n\n  },\n  'click .Mongol_edit_save': function() {\n\n    // Get current document to get its current state\n    // We need to send this to the server so we know which fields are up for change\n    // when applying the diffing algorithm\n\n    var collectionName = (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) ? \"users\" : String(this);\n\n    if (MeteorToysDict.equals(\"Mongol_currentCollection\", \"account_618\")) {\n      var newData = Mongol.getDocumentUpdate(\"account_618\");\n      var newObject = Mongol.parse(newData);\n      var oldObject = Meteor.user();\n      // console.log(targetCollection);\n      // console.log(newData);\n      // console.log(newObject);\n    } else {\n      var sessionKey = \"Mongol_\" + collectionName;\n      DocumentPosition = MeteorToysDict.get(sessionKey),\n        CurrentCollection = Mongol.Collection(collectionName).find({}, {transform: null}).fetch();\n      var newData = Mongol.getDocumentUpdate(collectionName);\n      var newObject = Mongol.parse(newData);\n      var oldObject = CurrentCollection[DocumentPosition];\n    }\n\n    if (newObject) {\n      Meteor.call(\"Mongol_update\", collectionName, newObject, Mongol.validateDocument(oldObject), function(error, result) {\n        if (!error) {\n          MeteorToysDict.set('Mongol_editMode', null);\n\n        } else {\n          Mongol.error('update')\n        }\n      });\n    }\n  },\n  'click .Mongol_edit_cancel': function() {\n    MeteorToysDict.set('Mongol_editMode', null);\n  },\n  'click .Mongol_m_signout': function() {\n    Meteor.logout();\n  },\n});\n\n\nTemplate.Mongol_docControls.helpers({\n  disable: function() {\n    var sessionKey = \"Mongol_\" + String(this);\n    var CurrentDocument = MeteorToysDict.get(sessionKey);\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n    var collectionCount = collectionVar.find().count();\n    \n    if (CurrentDocument >= 1) {\n      return;\n    }\n\n    if (collectionCount === 1) {\n      return \"MeteorToys_disabled\";\n    }\n\n  },\n  editing: function() {\n    var editing = MeteorToysDict.get('Mongol_editMode');\n    return editing;\n  },\n  editing_class: function() {\n    var edit = MeteorToysDict.get('Mongol_editMode');\n    if (edit) {\n      return \"Mongol_m_wrapper_expand\"\n    }\n  },\n  Mongol_docMenu_editing: function() {\n    var editMode = MeteorToysDict.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_docMenu_editing\";\n    }\n\n  },\n  active: function() {\n\n    var current = MeteorToysDict.get(\"Mongol_currentCollection\");\n\n    // return true if collection name matches\n    if (current === String(this)) {\n      return true;\n    }\n\n    // return true if it's a user account\n    if (current === \"account_618\") {\n      return true;\n    }\n\n  },\n  account: function() {\n\n    var currentCollection = MeteorToysDict.get(\"Mongol_currentCollection\");\n    if (currentCollection === \"account_618\") {\n      return true\n    } else {\n      return false\n    }\n  },\n\n});\n\n// Will possibly be used in augmented document udpate UI\n/*Template.Mongol_docViewer.events({\n'click .Mongol_string' : function (evt,tmpl) {\nvar field = $(evt.target).prevAll(\".Mongol_key:first\").text().slice(1,-2);\nMeteorToysDict.set('Mongol_inlineEdit',true);\nTracker.flush();\n// Do something to trigger the editable text element\n}\n});*/\n","\nTemplate.__checkName(\"Mongol_extensions\");\nTemplate[\"Mongol_extensions\"] = new Template(\"Template.Mongol_extensions\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"extension\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"Mongol_extension\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"Mongol_extension\");\nTemplate[\"Mongol_extension\"] = new Template(\"Template.Mongol_extension\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"extension\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"Mongol_Component\"), function() {\n      return [ \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_counter\"\n      }, Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"indicatorTemplate\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      })), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_icon Mongol_icon_extension\"\n      }), Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"Mongol_contentView\"\n      }, \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_docMenu\"\n      }, \"\\n\t\t\t  \", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"menuTemplate\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"Mongol_documentViewer \"\n      }, \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"bodyTemplate\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n","Template.Mongol_extension.helpers({\n\t'indicatorTemplate': function() {\n\t\treturn \"MongolKitIndicator_\" + this.name;\n\t},\n\t'menuTemplate': function() {\n\t\treturn \"MongolKitMenu_\" + this.name;\n\t},\n\t'bodyTemplate': function() {\n\t\treturn \"MongolKitBody_\" + this.name;\n\t}\n})\n\nTemplate.Mongol_extensions.helpers({\n\t'extension': function() {\n\t\tif (Package[\"meteortoys:mongolkit\"]) {\n\t\t\treturn [{'name':'SDK'}];\n\t\t}\n\t}\n})"]}